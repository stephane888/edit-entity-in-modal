{"version":3,"file":"EditEntity.umd.min.851.js","mappings":"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","sources":["webpack://EditEntity/../components_bootstrapvuejs/src/components/Ressouces/OptionsEntities.vue","webpack://EditEntity/../components_bootstrapvuejs/src/components/Ressouces/OptionsEntities.vue?e5cd","webpack://EditEntity/../components_bootstrapvuejs/src/components/Ressouces/OptionsEntities.vue?e0b0","webpack://EditEntity/../drupal-vuejs/src/App/jsonApi/itemsEntity.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('b-form-group',{attrs:{\"label\":_vm.field.label}},[(_vm.field.type == 'options_select')?_c('b-form-select',{attrs:{\"options\":_vm.options,\"name\":_vm.field.name},on:{\"change\":_vm.input},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}):_c('b-form-radio-group',{attrs:{\"options\":_vm.options,\"name\":_vm.field.name},on:{\"change\":_vm.input},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../edit-entity-in-modal/node_modules/thread-loader/dist/cjs.js!../../../../edit-entity-in-modal/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../../../edit-entity-in-modal/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OptionsEntities.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../edit-entity-in-modal/node_modules/thread-loader/dist/cjs.js!../../../../edit-entity-in-modal/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../../../edit-entity-in-modal/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OptionsEntities.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OptionsEntities.vue?vue&type=template&id=70654e40&\"\nimport script from \"./OptionsEntities.vue?vue&type=script&lang=js&\"\nexport * from \"./OptionsEntities.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../edit-entity-in-modal/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import utilities from \"../utilities.js\";\nimport Confs from \"./Confs.js\";\nimport buildFilter from \"./buildFilter.js\";\nclass itemsEntity {\n  constructor(entity_type_id, bundle = null, config = null) {\n    this.entity_type_id = entity_type_id;\n    //\n    if (!bundle) {\n      bundle = entity_type_id;\n    }\n    this.url = Confs.baseURl + \"/\" + this.entity_type_id + \"/\" + bundle;\n    this.items = [];\n    this.newConfig = config;\n    // En function de l'environement on doit ajouter les paramettres de bases.( notament baseUrl, TestDomain, les methodes surchargées ).\n    if (config) {\n      // à ce state la surcharge total pose probleme, donc on doit surcharger par necessite.\n      // utilities = {\n      //   ...utilities,\n      //   ...config,\n      // };\n      if (config.TestDomain) utilities.TestDomain = config.TestDomain;\n    }\n    /**\n     * Permet de joindre les multiples filtres.\n     */\n    this.filterQuery = \"\";\n  }\n  /**\n   * Recupere les items en passant par le token.\n   */\n  get() {\n    return new Promise((resolv) => {\n      if (this.filterQuery) {\n        this.filterQuery = this.url.includes(\"?\") ? \"&\" + this.filterQuery : \"?\" + this.filterQuery;\n      }\n      utilities.dGet(this.url + this.filterQuery, Confs.headers).then((resp) => {\n        this.items = resp.data;\n        resolv(resp.data);\n      });\n    });\n  }\n  getColumnName() {\n    switch (this.entity_type_id) {\n      case 'webform':\n        return \"title\"\n\n      default:\n        return \"name\"\n    }\n  }\n  /**\n   * Recupere les items\n   * ( on doit pouvoir faire un search avec d'autres filtre )\n   */\n  getSearch(search) {\n    const filter = new buildFilter();\n    filter.addFilter(this.getColumnName(), \"CONTAINS\", search);\n    return new Promise((resolv) => {\n      utilities.dGet(this.url + \"?\" + filter.query, Confs.headers).then((resp) => {\n        this.items = resp.data;\n        resolv(resp.data);\n      });\n    });\n  }\n  /**\n   *\n   * @returns *\n   */\n  getValue(term) {\n    const filter = new buildFilter();\n    filter.addFilter(this.getColumnName(), \"=\", term);\n    return new Promise((resolv) => {\n      utilities.dGet(this.url + \"?\" + filter.query, Confs.headers).then((resp) => {\n        this.items = resp.data;\n        resolv(resp.data);\n      });\n    });\n  }\n  /**\n   *\n   * @returns *\n   */\n  getValueByTid(id) {\n    const filter = new buildFilter();\n    filter.addFilter(\"tid\", \"=\", id);\n    return new Promise((resolv, reject) => {\n      utilities\n        .dGet(this.url + \"?\" + filter.query, Confs.headers)\n        .then((resp) => {\n          this.items = resp.data;\n          resolv(resp.data);\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n\n  /**\n   *\n   * @returns *\n   */\n  getValueById(id) {\n    const filter = new buildFilter();\n    let fieldId = \"drupal_internal__id\";\n    switch (this.entity_type_id) {\n      case \"user\":\n        fieldId = \"uid\";\n        break;\n      // case \"domain\":\n      //   fieldId = \"drupal_internal__id\";\n      //   break;\n      case \"node\":\n        fieldId = \"drupal_internal__nid\";\n        break;\n      case \"taxonomy_term\":\n        fieldId = \"tid\";\n        break;\n    }\n\n    filter.addFilter(fieldId, \"=\", id);\n    return new Promise((resolv) => {\n      utilities.dGet(this.url + \"?\" + filter.query, Confs.headers).then((resp) => {\n        this.items = resp.data;\n        resolv(resp.data);\n      });\n    });\n  }\n\n  /**\n   * @see https://www.drupal.org/docs/core-modules-and-themes/core-modules/jsonapi-module/filtering\n   * @param {*} field_name\n   * @param {*} operator\n   * @param {*} value\n   */\n  filter(field_name, operator, value) {\n    const filter = new buildFilter();\n    filter.addFilter(field_name, operator, value);\n    if (filter.query) {\n      if (!this.filterQuery) this.filterQuery += filter.query;\n      else {\n        this.filterQuery += \"&\" + filter.query;\n      }\n    }\n  }\n  /**\n   * Les entities à joindre dans la requete.\n   * @param {Array} entities\n   */\n  addIncludesEntities(entities = []) {\n    //IE.url += \"?include=executants,project_manager\";\n  }\n  /**\n   * Retourne les termes sous formes de liste d'otpions.\n   * NB: Pour recuperer certaines données l'utilisateur doit envoyer ses entites l'utilisateur doit s'authentifier.\n   */\n  getOptions() {\n    const options = [];\n    for (const i in this.items.data) {\n      const term = this.items.data[i];\n      if (this.entity_type_id == \"user\") {\n        options.push({\n          text: term.attributes.name ? term.attributes.name : term.attributes.display_name,\n          value: term.attributes.drupal_internal__uid,\n        });\n      }\n      else if (term.attributes.title) {\n        options.push({\n          text: term.attributes.title,\n          value: term.attributes.drupal_internal__id,\n        })\n      }\n      else if (term.attributes.name) {\n        options.push({\n          text: term.attributes.name,\n          value: term.attributes.drupal_internal__id,\n        });\n      } else if (term.attributes.label) {\n        options.push({\n          text: term.attributes.label,\n          value: term.attributes.drupal_internal__id,\n        });\n      }\n    }\n    return options;\n  }\n  /**\n   * On a deux cas interne et externe au domaine, et en function de l'environnement\n   * on doit utiliser token ou basic authentification.\n   * ## approche 1\n   * ( On ajoute cette variable en attendant la validation des autres modules de plus\n   * il faudra que dans \"config\" la methode dGet existe, ce qui n'est pas le cas pour certains environnement.\n   * gestion-projet-v2 => OK (--mode=dev), error (--mode=prod --> /projets/3248)\n   * edit-entity => ??\n   * Creation-cv => ??\n   * Creation de site web => ??\n   * ).\n   * ## approche 2\n   * faire une boucle.\n   */\n  remplaceConfig() {\n    // On vide l'objet afin d'eviter le bug : https://projets-old.habeuk.com/#/projets/3248\n    // utilities = {};\n    // console.log(\"utilities : \", utilities);\n    // console.log(\"newConfig : \", this.newConfig);\n    // utilities = this.newConfig;\n    for (const i in this.newConfig) {\n      utilities[i] = this.newConfig[i];\n    }\n  }\n}\nexport default itemsEntity;\n"],"names":["render","_vm","this","_c","_self","attrs","field","label","type","options","name","on","input","model","value","selected","callback","$$v","expression","staticRenderFns","components","props","required","namespaceStore","data","mounted","methods","loadTerms","entity_type_id","loadField","terms","getFistVocab","keys","vals","target_id","getValue","component","itemsEntity","constructor","bundle","config","url","Confs","items","newConfig","TestDomain","utilities","filterQuery","get","Promise","resolv","includes","then","resp","getColumnName","getSearch","search","filter","buildFilter","addFilter","query","term","getValueByTid","id","reject","catch","er","getValueById","fieldId","field_name","operator","addIncludesEntities","entities","getOptions","i","push","text","attributes","display_name","drupal_internal__uid","title","drupal_internal__id","remplaceConfig"],"sourceRoot":""}